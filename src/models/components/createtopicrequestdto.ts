/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
 */
export type Key = {};

/**
 * User defined custom name and provided by the user that will name the Topic created.
 */
export type Name = {};

export type CreateTopicRequestDto = {
    /**
     * User defined custom key and provided by the user that will be an unique identifier for the Topic created.
     */
    key: Key;
    /**
     * User defined custom name and provided by the user that will name the Topic created.
     */
    name: Name;
};

/** @internal */
export const Key$inboundSchema: z.ZodType<Key, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Key$Outbound = {};

/** @internal */
export const Key$outboundSchema: z.ZodType<Key$Outbound, z.ZodTypeDef, Key> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Key$ {
    /** @deprecated use `Key$inboundSchema` instead. */
    export const inboundSchema = Key$inboundSchema;
    /** @deprecated use `Key$outboundSchema` instead. */
    export const outboundSchema = Key$outboundSchema;
    /** @deprecated use `Key$Outbound` instead. */
    export type Outbound = Key$Outbound;
}

/** @internal */
export const Name$inboundSchema: z.ZodType<Name, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Name$Outbound = {};

/** @internal */
export const Name$outboundSchema: z.ZodType<Name$Outbound, z.ZodTypeDef, Name> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Name$ {
    /** @deprecated use `Name$inboundSchema` instead. */
    export const inboundSchema = Name$inboundSchema;
    /** @deprecated use `Name$outboundSchema` instead. */
    export const outboundSchema = Name$outboundSchema;
    /** @deprecated use `Name$Outbound` instead. */
    export type Outbound = Name$Outbound;
}

/** @internal */
export const CreateTopicRequestDto$inboundSchema: z.ZodType<
    CreateTopicRequestDto,
    z.ZodTypeDef,
    unknown
> = z.object({
    key: z.lazy(() => Key$inboundSchema),
    name: z.lazy(() => Name$inboundSchema),
});

/** @internal */
export type CreateTopicRequestDto$Outbound = {
    key: Key$Outbound;
    name: Name$Outbound;
};

/** @internal */
export const CreateTopicRequestDto$outboundSchema: z.ZodType<
    CreateTopicRequestDto$Outbound,
    z.ZodTypeDef,
    CreateTopicRequestDto
> = z.object({
    key: z.lazy(() => Key$outboundSchema),
    name: z.lazy(() => Name$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTopicRequestDto$ {
    /** @deprecated use `CreateTopicRequestDto$inboundSchema` instead. */
    export const inboundSchema = CreateTopicRequestDto$inboundSchema;
    /** @deprecated use `CreateTopicRequestDto$outboundSchema` instead. */
    export const outboundSchema = CreateTopicRequestDto$outboundSchema;
    /** @deprecated use `CreateTopicRequestDto$Outbound` instead. */
    export type Outbound = CreateTopicRequestDto$Outbound;
}
