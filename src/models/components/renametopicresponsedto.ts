/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type RenameTopicResponseDtoEnvironmentId = {};

export type RenameTopicResponseDtoId = {};

export type RenameTopicResponseDtoOrganizationId = {};

export type RenameTopicResponseDtoKey = {};

export type RenameTopicResponseDtoName = {};

export type RenameTopicResponseDto = {
    environmentId: RenameTopicResponseDtoEnvironmentId;
    id?: RenameTopicResponseDtoId | undefined;
    organizationId: RenameTopicResponseDtoOrganizationId;
    key: RenameTopicResponseDtoKey;
    name: RenameTopicResponseDtoName;
    subscribers: Array<string>;
};

/** @internal */
export const RenameTopicResponseDtoEnvironmentId$inboundSchema: z.ZodType<
    RenameTopicResponseDtoEnvironmentId,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type RenameTopicResponseDtoEnvironmentId$Outbound = {};

/** @internal */
export const RenameTopicResponseDtoEnvironmentId$outboundSchema: z.ZodType<
    RenameTopicResponseDtoEnvironmentId$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDtoEnvironmentId
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDtoEnvironmentId$ {
    /** @deprecated use `RenameTopicResponseDtoEnvironmentId$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDtoEnvironmentId$inboundSchema;
    /** @deprecated use `RenameTopicResponseDtoEnvironmentId$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDtoEnvironmentId$outboundSchema;
    /** @deprecated use `RenameTopicResponseDtoEnvironmentId$Outbound` instead. */
    export type Outbound = RenameTopicResponseDtoEnvironmentId$Outbound;
}

/** @internal */
export const RenameTopicResponseDtoId$inboundSchema: z.ZodType<
    RenameTopicResponseDtoId,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type RenameTopicResponseDtoId$Outbound = {};

/** @internal */
export const RenameTopicResponseDtoId$outboundSchema: z.ZodType<
    RenameTopicResponseDtoId$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDtoId
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDtoId$ {
    /** @deprecated use `RenameTopicResponseDtoId$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDtoId$inboundSchema;
    /** @deprecated use `RenameTopicResponseDtoId$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDtoId$outboundSchema;
    /** @deprecated use `RenameTopicResponseDtoId$Outbound` instead. */
    export type Outbound = RenameTopicResponseDtoId$Outbound;
}

/** @internal */
export const RenameTopicResponseDtoOrganizationId$inboundSchema: z.ZodType<
    RenameTopicResponseDtoOrganizationId,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type RenameTopicResponseDtoOrganizationId$Outbound = {};

/** @internal */
export const RenameTopicResponseDtoOrganizationId$outboundSchema: z.ZodType<
    RenameTopicResponseDtoOrganizationId$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDtoOrganizationId
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDtoOrganizationId$ {
    /** @deprecated use `RenameTopicResponseDtoOrganizationId$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDtoOrganizationId$inboundSchema;
    /** @deprecated use `RenameTopicResponseDtoOrganizationId$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDtoOrganizationId$outboundSchema;
    /** @deprecated use `RenameTopicResponseDtoOrganizationId$Outbound` instead. */
    export type Outbound = RenameTopicResponseDtoOrganizationId$Outbound;
}

/** @internal */
export const RenameTopicResponseDtoKey$inboundSchema: z.ZodType<
    RenameTopicResponseDtoKey,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type RenameTopicResponseDtoKey$Outbound = {};

/** @internal */
export const RenameTopicResponseDtoKey$outboundSchema: z.ZodType<
    RenameTopicResponseDtoKey$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDtoKey
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDtoKey$ {
    /** @deprecated use `RenameTopicResponseDtoKey$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDtoKey$inboundSchema;
    /** @deprecated use `RenameTopicResponseDtoKey$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDtoKey$outboundSchema;
    /** @deprecated use `RenameTopicResponseDtoKey$Outbound` instead. */
    export type Outbound = RenameTopicResponseDtoKey$Outbound;
}

/** @internal */
export const RenameTopicResponseDtoName$inboundSchema: z.ZodType<
    RenameTopicResponseDtoName,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type RenameTopicResponseDtoName$Outbound = {};

/** @internal */
export const RenameTopicResponseDtoName$outboundSchema: z.ZodType<
    RenameTopicResponseDtoName$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDtoName
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDtoName$ {
    /** @deprecated use `RenameTopicResponseDtoName$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDtoName$inboundSchema;
    /** @deprecated use `RenameTopicResponseDtoName$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDtoName$outboundSchema;
    /** @deprecated use `RenameTopicResponseDtoName$Outbound` instead. */
    export type Outbound = RenameTopicResponseDtoName$Outbound;
}

/** @internal */
export const RenameTopicResponseDto$inboundSchema: z.ZodType<
    RenameTopicResponseDto,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        _environmentId: z.lazy(() => RenameTopicResponseDtoEnvironmentId$inboundSchema),
        _id: z.lazy(() => RenameTopicResponseDtoId$inboundSchema).optional(),
        _organizationId: z.lazy(() => RenameTopicResponseDtoOrganizationId$inboundSchema),
        key: z.lazy(() => RenameTopicResponseDtoKey$inboundSchema),
        name: z.lazy(() => RenameTopicResponseDtoName$inboundSchema),
        subscribers: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            _environmentId: "environmentId",
            _id: "id",
            _organizationId: "organizationId",
        });
    });

/** @internal */
export type RenameTopicResponseDto$Outbound = {
    _environmentId: RenameTopicResponseDtoEnvironmentId$Outbound;
    _id?: RenameTopicResponseDtoId$Outbound | undefined;
    _organizationId: RenameTopicResponseDtoOrganizationId$Outbound;
    key: RenameTopicResponseDtoKey$Outbound;
    name: RenameTopicResponseDtoName$Outbound;
    subscribers: Array<string>;
};

/** @internal */
export const RenameTopicResponseDto$outboundSchema: z.ZodType<
    RenameTopicResponseDto$Outbound,
    z.ZodTypeDef,
    RenameTopicResponseDto
> = z
    .object({
        environmentId: z.lazy(() => RenameTopicResponseDtoEnvironmentId$outboundSchema),
        id: z.lazy(() => RenameTopicResponseDtoId$outboundSchema).optional(),
        organizationId: z.lazy(() => RenameTopicResponseDtoOrganizationId$outboundSchema),
        key: z.lazy(() => RenameTopicResponseDtoKey$outboundSchema),
        name: z.lazy(() => RenameTopicResponseDtoName$outboundSchema),
        subscribers: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            environmentId: "_environmentId",
            id: "_id",
            organizationId: "_organizationId",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RenameTopicResponseDto$ {
    /** @deprecated use `RenameTopicResponseDto$inboundSchema` instead. */
    export const inboundSchema = RenameTopicResponseDto$inboundSchema;
    /** @deprecated use `RenameTopicResponseDto$outboundSchema` instead. */
    export const outboundSchema = RenameTopicResponseDto$outboundSchema;
    /** @deprecated use `RenameTopicResponseDto$Outbound` instead. */
    export type Outbound = RenameTopicResponseDto$Outbound;
}
